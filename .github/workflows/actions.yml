name: run main.py

on:
 workflow_dispatch:
    inputs:
      logLevel:
        description: 'Log level'
        required: true
        default: 'warning'
        type: choice
        options:
        - info
        - warning
        - debug
      tags:
        description: 'Test scenario tags'
        required: false
        type: boolean
   
      
jobs:
  build:
    runs-on: ubuntu-latest
    steps:

      - name: checkout repo content
        uses: actions/checkout@v3

      - id: setup_python
        uses: actions/setup-python@v3
        with:
          python-version: 3.7

      - id: python_cache
        uses: actions/cache@v3
        with:
          path: venv
          key: pip-${{ steps.setup_python.outputs.python-version }}-${{ hashFiles('requirements.txt') }}

      - name: Install Dependencies 
        if: steps.python_cache.outputs.cache-hit != 'true'
        run: |
          # Check if venv exists (restored from secondary keys if any, and delete)
          # You might not need this line if you only have one primary key for the venv caching
          # I kept it in my code as a fail-safe
          if [ -d "venv" ]; then rm -rf venv; fi

          # Re-create the venv
          python3 -m venv venv

          # Install dependencies
          venv/bin/python3 -m pip install -r requirements.txt
          
      - name: execute py script # run main.py
        env:
          SOME_SECRET: ${{ secrets.SOME_SECRET }}
        run: python main.py
          

